CREATE TABLE PROFESSOR(
PROF_ID VARCHAR2(10) NOT NULL PRIMARY KEY,
PNAME VARCHAR2(40) NOT NULL,
RANK NUMBER(5),
AGE NUMBER(3),
RESEARCH_SPECIALIZATION VARCHAR2(40));


CREATE TABLE PROJECT(
PROJ_NUM VARCHAR2(10) NOT NULL PRIMARY KEY,
SPONSOR_NAME VARCHAR2(30),
ST_DATE DATE,
END_DATE DATE,
BUDGET NUMBER(10),
PI_PROFID VARCHAR2(10) REFERENCES PROFESSOR(PROF_ID) ON DELETE CASCADE);


CREATE TABLE STUDENT(
USN VARCHAR2(10) NOT NULL PRIMARY KEY,
SNAME VARCHAR2(30) NOT NULL,
AGE NUMBER(5),
DEGREE VARCHAR2(50),
PROF_ID VARCHAR2(10) REFERENCES PROFESSOR(PROF_ID) ON DELETE CASCADE);


CREATE TABLE PROF_WORK(
PROF_ID VARCHAR2(10) REFERENCES PROFESSOR(PROF_ID) ON DELETE CASCADE,
PROJ_NUM VARCHAR2(10) REFERENCES PROJECT(PROJ_NUM) ON DELETE CASCADE,
PRIMARY KEY(PROF_ID,PROJ_NUM));


CREATE TABLE STUDENT_WORK(
USN VARCHAR2(10) REFERENCES STUDENT(USN) ON DELETE CASCADE,
PROJ_NUM VARCHAR2(10) REFERENCES PROJECT(PROJ_NUM) ON DELETE CASCADE,
PRIMARY KEY(USN,PROJ_NUM));


INSERT INTO PROFESSOR VALUES('&PROF_ID','&PNAME','&RANK','&AGE','&RESEARCH_SPECIALIZATION');


INSERT INTO PROJECT VALUES('&PROJ_NUM','&SPONSOR_NAME','&ST_DATE','&END_DATE','&BUDGET','&PI_PROFID');


INSERT INTO STUDENT VALUES('&USN','&SNAME','&AGE','&DEGREE','&PROF_ID');


INSERT INTO PROF_WORK VALUES('&PROF_ID','&PROJ_NUM');


INSERT INTO STUDENT_WORK VALUES('&USN','&PROJ_NUM');


1)
SELECT PNAME FROM PROFESSOR WHERE PROF_ID IN (SELECT PI_PROFID FROM PROJECT WHERE NOT BUDGET>100000 AND END_DATE>SYSDATE);


2)
SELECT SNAME, PNAME, SPONSOR_NAME FROM PROFESSOR P, STUDENT S, PROJECT PJ, STUDENT_WORK SW WHERE S.PROF_ID=P.PROF_ID AND PJ.PI_PROFID=P.PROF_ID AND SW.USN=S.USN AND PJ.PROJ_NUM=SW.PROJ_NUM;


3)
SELECT PNAME, SUM(BUDGET) FROM PROFESSOR P, PROJECT PR WHERE PR.PI_PROFID=P.PROF_ID AND ST_DATE>'31-DEC-2005' AND END_DATE LIKE '%10' GROUP BY PI_PROFID, PNAME;


4)
SELECT PNAME FROM PROFESSOR WHERE PROF_ID IN (SELECT PI_PROFID FROM PROJECT GROUP BY PI_PROFID HAVING SUM(BUDGET)>(SELECT AVG(BUDGET) FROM PROJECT));


5)
SELECT * FROM PROFESSOR WHERE PROF_ID IN (SELECT PROF_ID FROM PROF_WORK GROUP BY PROF_ID HAVING COUNT(PROJ_NUM)= (SELECT COUNT(PROJ_NUM) FROM PROJECT));
